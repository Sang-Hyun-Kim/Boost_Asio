// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sumproto.proto

#include "sumproto.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace pbsum {
PROTOBUF_CONSTEXPR Factor::Factor(
    ::_pbi::ConstantInitialized)
  : num_(0){}
struct FactorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FactorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FactorDefaultTypeInternal() {}
  union {
    Factor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FactorDefaultTypeInternal _Factor_default_instance_;
PROTOBUF_CONSTEXPR Local_sum::Local_sum(
    ::_pbi::ConstantInitialized)
  : sum_(0){}
struct Local_sumDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Local_sumDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Local_sumDefaultTypeInternal() {}
  union {
    Local_sum _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Local_sumDefaultTypeInternal _Local_sum_default_instance_;
}  // namespace pbsum
static ::_pb::Metadata file_level_metadata_sumproto_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sumproto_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sumproto_2eproto = nullptr;

const uint32_t TableStruct_sumproto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbsum::Factor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbsum::Factor, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbsum::Local_sum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbsum::Local_sum, sum_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pbsum::Factor)},
  { 7, -1, -1, sizeof(::pbsum::Local_sum)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::pbsum::_Factor_default_instance_._instance,
  &::pbsum::_Local_sum_default_instance_._instance,
};

const char descriptor_table_protodef_sumproto_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016sumproto.proto\022\005pbsum\"\025\n\006Factor\022\013\n\003num"
  "\030\001 \001(\005\"\030\n\tLocal_sum\022\013\n\003sum\030\001 \001(\005*2\n\013Mess"
  "ageCode\022\010\n\004NONE\020\000\022\n\n\006FACTOR\020\001\022\r\n\tLOCAL_S"
  "UM\020\002b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_sumproto_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sumproto_2eproto = {
    false, false, 132, descriptor_table_protodef_sumproto_2eproto,
    "sumproto.proto",
    &descriptor_table_sumproto_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_sumproto_2eproto::offsets,
    file_level_metadata_sumproto_2eproto, file_level_enum_descriptors_sumproto_2eproto,
    file_level_service_descriptors_sumproto_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sumproto_2eproto_getter() {
  return &descriptor_table_sumproto_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sumproto_2eproto(&descriptor_table_sumproto_2eproto);
namespace pbsum {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sumproto_2eproto);
  return file_level_enum_descriptors_sumproto_2eproto[0];
}
bool MessageCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Factor::_Internal {
 public:
};

Factor::Factor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:pbsum.Factor)
}
Factor::Factor(const Factor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:pbsum.Factor)
}

inline void Factor::SharedCtor() {
num_ = 0;
}

Factor::~Factor() {
  // @@protoc_insertion_point(destructor:pbsum.Factor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Factor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Factor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Factor::Clear() {
// @@protoc_insertion_point(message_clear_start:pbsum.Factor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Factor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Factor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbsum.Factor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbsum.Factor)
  return target;
}

size_t Factor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbsum.Factor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 num = 1;
  if (this->_internal_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Factor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Factor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Factor::GetClassData() const { return &_class_data_; }

void Factor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Factor *>(to)->MergeFrom(
      static_cast<const Factor &>(from));
}


void Factor::MergeFrom(const Factor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbsum.Factor)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Factor::CopyFrom(const Factor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbsum.Factor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Factor::IsInitialized() const {
  return true;
}

void Factor::InternalSwap(Factor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(num_, other->num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Factor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sumproto_2eproto_getter, &descriptor_table_sumproto_2eproto_once,
      file_level_metadata_sumproto_2eproto[0]);
}

// ===================================================================

class Local_sum::_Internal {
 public:
};

Local_sum::Local_sum(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:pbsum.Local_sum)
}
Local_sum::Local_sum(const Local_sum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sum_ = from.sum_;
  // @@protoc_insertion_point(copy_constructor:pbsum.Local_sum)
}

inline void Local_sum::SharedCtor() {
sum_ = 0;
}

Local_sum::~Local_sum() {
  // @@protoc_insertion_point(destructor:pbsum.Local_sum)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Local_sum::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Local_sum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Local_sum::Clear() {
// @@protoc_insertion_point(message_clear_start:pbsum.Local_sum)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Local_sum::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 sum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          sum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Local_sum::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbsum.Local_sum)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sum = 1;
  if (this->_internal_sum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_sum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbsum.Local_sum)
  return target;
}

size_t Local_sum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbsum.Local_sum)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sum = 1;
  if (this->_internal_sum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_sum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Local_sum::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Local_sum::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Local_sum::GetClassData() const { return &_class_data_; }

void Local_sum::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Local_sum *>(to)->MergeFrom(
      static_cast<const Local_sum &>(from));
}


void Local_sum::MergeFrom(const Local_sum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbsum.Local_sum)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sum() != 0) {
    _internal_set_sum(from._internal_sum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Local_sum::CopyFrom(const Local_sum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbsum.Local_sum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Local_sum::IsInitialized() const {
  return true;
}

void Local_sum::InternalSwap(Local_sum* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(sum_, other->sum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Local_sum::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sumproto_2eproto_getter, &descriptor_table_sumproto_2eproto_once,
      file_level_metadata_sumproto_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pbsum
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pbsum::Factor*
Arena::CreateMaybeMessage< ::pbsum::Factor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbsum::Factor >(arena);
}
template<> PROTOBUF_NOINLINE ::pbsum::Local_sum*
Arena::CreateMaybeMessage< ::pbsum::Local_sum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbsum::Local_sum >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
